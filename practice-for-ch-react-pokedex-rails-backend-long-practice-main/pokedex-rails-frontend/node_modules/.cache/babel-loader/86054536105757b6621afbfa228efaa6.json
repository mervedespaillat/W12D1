{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mervedoganespaillat/Desktop/RUBY/TWELFTH_WEEK/Project/practice-for-ch-react-pokedex-rails-backend-long-practice-main/pokedex-rails-frontend/src/components/PokemonBrowser.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, Route, useParams } from 'react-router-dom';\nimport PokemonDetail from './PokemonDetail';\nimport CreatePokemonForm from './CreatePokemonForm';\nimport Fab from './Fab';\nimport { getPokemon } from '../store/pokemon';\n\nconst PokemonBrowser = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    pokemonId\n  } = useParams();\n  const pokemon = useSelector(state => {\n    return state.pokemon.list.map(pokemonId => state.pokemon[pokemonId]);\n  });\n  const [showForm, setShowForm] = useState(false);\n  useEffect(() => {\n    dispatch(getPokemon());\n  }, [dispatch]);\n\n  if (!pokemon) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(Fab, {\n        hidden: showForm,\n        onClick: () => setShowForm(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), pokemon.map(pokemon => {\n        return /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/pokemon/${pokemon.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Number.parseInt(pokemonId) === pokemon.id ? \"nav-entry is-selected\" : \"nav-entry\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nav-entry-image\",\n              style: {\n                backgroundImage: `url('${pokemon.imageUrl}')`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"primary-text\",\n                children: pokemon.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"secondary-text\",\n                children: [pokemon.no, \" \", pokemon.captured && \"(Captured)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, pokemon.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), showForm ? /*#__PURE__*/_jsxDEV(CreatePokemonForm, {\n      hideForm: () => setShowForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/pokemon/:pokemonId\",\n      children: /*#__PURE__*/_jsxDEV(PokemonDetail, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PokemonBrowser, \"IkKWNAV00R1NncovPSqj8tjjCG8=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n\n_c = PokemonBrowser;\nexport default PokemonBrowser;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonBrowser\");","map":{"version":3,"sources":["/Users/mervedoganespaillat/Desktop/RUBY/TWELFTH_WEEK/Project/practice-for-ch-react-pokedex-rails-backend-long-practice-main/pokedex-rails-frontend/src/components/PokemonBrowser.js"],"names":["useState","useEffect","useDispatch","useSelector","NavLink","Route","useParams","PokemonDetail","CreatePokemonForm","Fab","getPokemon","PokemonBrowser","dispatch","pokemonId","pokemon","state","list","map","showForm","setShowForm","id","Number","parseInt","backgroundImage","imageUrl","name","no","captured"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,SAAzB,QAA0C,kBAA1C;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAgBP,SAAS,EAA/B;AACA,QAAMQ,OAAO,GAAGX,WAAW,CAACY,KAAK,IAAI;AACnC,WAAOA,KAAK,CAACD,OAAN,CAAcE,IAAd,CAAmBC,GAAnB,CAAuBJ,SAAS,IAAIE,KAAK,CAACD,OAAN,CAAcD,SAAd,CAApC,CAAP;AACD,GAF0B,CAA3B;AAGA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACF,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,CAACE,QAAD,CAFM,CAAT;;AAIA,MAAI,CAACE,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,MAAM,EAAEI,QAAb;AAAuB,QAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,IAAD;AAAjD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGL,OAAO,CAACG,GAAR,CAAaH,OAAD,IAAa;AACxB,4BACE,QAAC,OAAD;AAA4B,UAAA,EAAE,EAAG,YAAWA,OAAO,CAACM,EAAG,EAAvD;AAAA,iCACE;AACE,YAAA,SAAS,EACPC,MAAM,CAACC,QAAP,CAAgBT,SAAhB,MAA+BC,OAAO,CAACM,EAAvC,GACI,uBADJ,GAEI,WAJR;AAAA,oCAOE;AACE,cAAA,SAAS,EAAC,iBADZ;AAEE,cAAA,KAAK,EAAE;AAAEG,gBAAAA,eAAe,EAAG,QAAOT,OAAO,CAACU,QAAS;AAA5C;AAFT;AAAA;AAAA;AAAA;AAAA,oBAPF,eAWE;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,0BAA+BV,OAAO,CAACW;AAAvC;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,gBAAA,SAAS,EAAC,gBAAf;AAAA,2BACGX,OAAO,CAACY,EADX,OACgBZ,OAAO,CAACa,QAAR,IAAoB,YADpC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAcb,OAAO,CAACW,IAAtB;AAAA;AAAA;AAAA;AAAA,gBADF;AAsBD,OAvBA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EA4BGP,QAAQ,gBACP,QAAC,iBAAD;AAAmB,MAAA,QAAQ,EAAE,MAAMC,WAAW,CAAC,KAAD;AAA9C;AAAA;AAAA;AAAA;AAAA,YADO,gBAGP,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,qBAAZ;AAAA,6BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CAtDD;;GAAMR,c;UACaT,W,EACKI,S,EACNH,W;;;KAHZQ,c;AAwDN,eAAeA,cAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, Route, useParams } from 'react-router-dom';\n\nimport PokemonDetail from './PokemonDetail';\nimport CreatePokemonForm from './CreatePokemonForm';\nimport Fab from './Fab';\nimport { getPokemon } from '../store/pokemon';\n\nconst PokemonBrowser = () => {\n  const dispatch = useDispatch();\n  const { pokemonId } = useParams();\n  const pokemon = useSelector(state => {\n    return state.pokemon.list.map(pokemonId => state.pokemon[pokemonId]);\n  });\n  const [showForm, setShowForm] = useState(false);\n\n  useEffect(() => {\n    dispatch(getPokemon());\n  }, [dispatch]);\n\n  if (!pokemon) {\n    return null;\n  }\n\n  return (\n    <main>\n      <nav>\n        <Fab hidden={showForm} onClick={() => setShowForm(true)} />\n        {pokemon.map((pokemon) => {\n          return (\n            <NavLink key={pokemon.name} to={`/pokemon/${pokemon.id}`}>\n              <div\n                className={\n                  Number.parseInt(pokemonId) === pokemon.id\n                    ? \"nav-entry is-selected\"\n                    : \"nav-entry\"\n                }\n              >\n                <div\n                  className=\"nav-entry-image\"\n                  style={{ backgroundImage: `url('${pokemon.imageUrl}')` }}\n                ></div>\n                <div>\n                  <div className=\"primary-text\">{pokemon.name}</div>\n                  <div className=\"secondary-text\">\n                    {pokemon.no} {pokemon.captured && \"(Captured)\"}\n                  </div>\n                </div>\n              </div>\n            </NavLink>\n          );\n        })}\n      </nav>\n      {showForm ? (\n        <CreatePokemonForm hideForm={() => setShowForm(false)} />\n      ) : (\n        <Route path=\"/pokemon/:pokemonId\">\n          <PokemonDetail/>\n        </Route>\n      )}\n    </main>\n  );\n};\n\nexport default PokemonBrowser;\n"]},"metadata":{},"sourceType":"module"}